<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

<mvc:resources mapping="/resources/**" location="/resources/"/>

	<!-- Enable auto wire -->
	<context:annotation-config />
	
	<context:component-scan base-package="com.crud" />

	<mvc:annotation-driven />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
			</list>
		</property>
	</bean>

	<!-- destroy-method - to close data source pool..to avoid memory leak -->
	 <bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driverClass}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>

	<!-- Session Factory declaration -->
	 <bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.crud.entities"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.default_schema">mvc</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">true</prop>
 				<prop key="hibernate.hbm2ddl.auto">update</prop>
 				<!-- second level cache -->
 				<prop key="hibernate.cache.use_second_level_cache">true</prop>
 				<prop key="hibernate.cache.use_query_cache">true</prop>
 				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
 				<prop key="format_sql">true</prop>
				<prop key="use_sql_comments">true</prop>
			</props>
		</property>
	</bean>

	<!-- Transaction manager declaration -->
 	<tx:annotation-driven
		transaction-manager="transactionManager" />
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- java mail sender -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	    <!-- SMTP settings -->
	    <property name="host" value="smtp.gmail.com" />
	    <property name="port" value="587" />
	    <property name="username" value="akashmulik39@gmail.com" />
	    <property name="password" value="akash$javacoder" />
	 
	    <property name="javaMailProperties">
	        <!-- additional properties specific to JavaMail -->
	        <props>
	            <prop key="mail.transport.protocol">smtp</prop>
	            <prop key="mail.smtp.auth">true</prop>
	            <prop key="mail.smtp.starttls.enable">true</prop>
	            <prop key="mail.debug">true</prop>
	        </props>
	    </property>
	</bean>
	
	<!-- Configuring interceptors based on URI -->
<!--   	<mvc:interceptors>
 	<mvc:interceptor>
 	<mvc:mapping path="/**"/>
		<bean class="com.crud.interceptors.SessionInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors> -->

</beans>